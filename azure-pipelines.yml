trigger:
  branches:
    include:
    - develop
pr:
  enabled: false
resources:
  repositories:
  - repository: self
variables:
- name: dockerRegistryServiceConnection
  value: '1c9c2c2d-f3c3-454f-9fbb-d5242dc2d0cb'
- name: imageRepository
  value: 'semesterly'
- name: containerRegistry
  value: 'semesterly.azurecr.io'
- name: tag
  value: '$(Build.BuildId)'
- name: imagePullSecret
  value: 'semesterly193122b2-auth'
- name: vmImageName
  value: 'ubuntu-latest'
- name: k8sNamespaceForPR
  value: 'review-app-$(System.PullRequest.PullRequestId)'
stages:
- stage: Build
  displayName: Build stage
  condition: not(startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push Django Container
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: ./Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build nginx Container
      inputs:
        command: 'build'
        repository: 'semesterly-nginx'
        arguments: '--build-arg djangoImage=$(containerRegistry)/$(imageRepository):$(tag)'
        Dockerfile: './build/semesterly-nginx/Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: "$(tag)          \n"
    - task: Docker@2
      displayName: Push nginx Container
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'semesterly-nginx'
        command: 'push'
        tags: |
          $(tag)
    - task: ecdc45f6-832d-4ad9-b52b-ee49e94659be@0
      inputs:
        targetPath: manifests
        artifactName: manifests
- stage: Deploy
  displayName: Deploy stage
  dependsOn:
  - Build
  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment:
      name: 'uis-prod.semesterly-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
                $(Pipeline.Workspace)/manifests/ingress.yml
                $(Pipeline.Workspace)/manifests/cronjob.yml
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
                $(containerRegistry)/semesterly-nginx:$(tag)

